"use strict";var DecapService=function($http,$q,ServerService){function makeSideCars(project){var sidecars=[];if(project.sidecars)for(var i in project.sidecars){var parsed=$.parseJSON(project.sidecars[i]),sidecar={};if(sidecar.text=project.sidecars[i],sidecar.env=parsed.env,sidecar.image=parsed.image,sidecar.name=parsed.name,sidecar.ports="",parsed.ports)for(var port in parsed.ports)sidecar.ports=parsed.ports[port].containerPort+" ";sidecars.push(sidecar)}return sidecars}function getProjectAllStatistics(projects){var stats=[],promises=projects.map(function(project){var deferred=$q.defer(),path="/projects/"+project.team+"/"+project.project+"/refs",url=ServerService.api(path);return $http.get(url,ServerService.apiConfig()).success(function(data){var stat={project:project.project,team:project.team,branchesCount:data.refs.length},path="/builds/"+project.team+"/"+project.project,url=ServerService.api(path);$http.get(url,ServerService.apiConfig()).success(function(data){stat.buildsCount=data.builds.length,stats.push(stat),deferred.resolve(stat)}).error(function(error){deferred.reject()})}).error(function(error){deferred.reject()}),deferred.promise});return $q.all(promises)}function rejectWithMessage(deferred,message){_.isObject(message)&&(message=message.error),deferred.reject(message)}var service={getVersion:function(){var deferred=$q.defer(),url=ServerService.api("/version");return $http.get(url,ServerService.apiConfig()).success(function(version,status){deferred.resolve(version)}).error(function(message,status){rejectWithMessage(deferred,message)}),deferred.promise},getQueueStatus:function(){var deferred=$q.defer(),url=ServerService.api("/shutdown");return $http.get(url,ServerService.apiConfig()).success(function(data,status){deferred.resolve(data)}).error(function(message,status){rejectWithMessage(deferred,message)}),deferred.promise},getProjects:function(){var deferred=$q.defer(),url=ServerService.api("/projects");return $http.get(url,ServerService.apiConfig()).success(function(data,status){deferred.resolve(data.projects)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getProject:function(projectName){var deferred=$q.defer(),url=ServerService.api("/projects");return $http.get(url,ServerService.apiConfig()).success(function(data,status){var project=null;for(var i in data.projects)if(projectName===data.projects[i].project){project=data.projects[i];break}project?project.sidecars=makeSideCars(project):(project={},project.project="unknown",project.team="none",project.sidecars=[]),deferred.resolve(project)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getTeams:function(){var deferred=$q.defer(),url=ServerService.api("/teams");return $http.get(url,ServerService.apiConfig()).success(function(data,status){deferred.resolve(data.teams)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getBuilds:function(team,project){var deferred=$q.defer(),path="/builds/"+team+"/"+project,url=ServerService.api(path);return $http.get(url,ServerService.apiConfig()).success(function(data,status){deferred.resolve(data.builds)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getBranches:function(team,project){var deferred=$q.defer(),path="/projects/"+team+"/"+project+"/refs",url=ServerService.api(path);return $http.get(url,ServerService.apiConfig()).success(function(data,status){deferred.resolve(data.refs)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getArtifacts:function(id){var deferred=$q.defer(),path="/artifacts/"+id,url=ServerService.api(path),config=ServerService.apiConfig();return config.headers.Accept="text/plain",$http.get(url,config).success(function(data,status){deferred.resolve(data)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getLogs:function(id){var deferred=$q.defer(),path="/logs/"+id,url=ServerService.api(path),config=ServerService.apiConfig();return config.headers.Accept="text/plain",$http.get(url,config).success(function(data,status){deferred.resolve(data)}).error(function(message,status){404==status?deferred.resolve([]):rejectWithMessage(deferred,message)}),deferred.promise},getLogsDownloadURL:function(id){var path="/logs/"+id;return ServerService.api(path)},getArtifactsDownloadURL:function(id){var path="/artifacts/"+id;return ServerService.api(path)},getBuildStatistics:function(){var deferred=$q.defer();return this.getProjects().then(function(projects){getProjectAllStatistics(projects).then(function(data){deferred.resolve(data)},function(message,status){rejectWithMessage(deferred,message)})},function(message,status){rejectWithMessage(deferred,message)}),deferred.promise}};return service};angular.module("decapApp.services",[]).value("version","0.1");